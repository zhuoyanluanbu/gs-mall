<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gs.mall.finance.dao.TradeStatementDao">
		
  <resultMap id="BaseResultMap" type="com.gs.mall.finance.po.TradeStatement">
			<id column="ts_id" jdbcType="BIGINT" property="tsId" />
			<result column="order_id" jdbcType="CHAR" property="orderId" />
			<result column="merchant_id" jdbcType="BIGINT" property="merchantId" />
			<result column="amount" jdbcType="INTEGER" property="amount" />
			<result column="supplier_id" jdbcType="CHAR" property="supplierId" />
			<result column="status" jdbcType="SMALLINT" property="status" />
			<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap> 
  

  <sql id="Base_Column_List">
		ts_id
		,order_id
		,merchant_id
		,amount
		,supplier_id
		,status
		,create_time
  </sql>

  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" /> 
    from gs_trade_statement 
    where ts_id = #{id}
  </select>
	
  <insert id="insert" parameterType="com.gs.mall.finance.po.TradeStatement" useGeneratedKeys="true" keyColumn="ts_id" keyProperty="tsId">
    insert into gs_trade_statement(
				order_id
				,merchant_id
				,amount
				,supplier_id
				,status
				,create_time
	)
	values(
			#{orderId,jdbcType=CHAR}
			,#{merchantId,jdbcType=BIGINT}
			,#{amount,jdbcType=INTEGER}
			,#{supplierId,jdbcType=CHAR}
			,#{status,jdbcType=SMALLINT}
			,#{createTime,jdbcType=TIMESTAMP}
	)	
  </insert>

  <update id="update" parameterType="com.gs.mall.finance.po.TradeStatement">
    update gs_trade_statement 
    <set>
			 <if test="orderId != null">
				order_id = #{orderId,jdbcType=CHAR},
			 </if>
			 <if test="merchantId != null">
				merchant_id = #{merchantId,jdbcType=BIGINT},
			 </if>
			 <if test="amount != null">
				amount = #{amount,jdbcType=INTEGER},
			 </if>
			 <if test="supplierId != null">
				supplier_id = #{supplierId,jdbcType=CHAR},
			 </if>
			 <if test="status != null">
				status = #{status,jdbcType=SMALLINT},
			 </if>
			 <if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			 </if>
	</set>
    where ts_id = #{tsId}
  </update>

  <delete id="deleteById" parameterType="java.lang.Long">
    delete from gs_trade_statement where ts_id = #{id}
  </delete>
  
  <select id="selectByParam" resultMap="BaseResultMap">
	  select <include refid="Base_Column_List"/> from gs_trade_statement <include refid="select_query_sql"/> 
	  order by create_time desc limit  #{startIndex}, #{fetchSize}
  </select>
  
  <select id="selectCountByParam" parameterType="java.util.Map" resultType="java.lang.Integer">
		 select count(*) items from gs_trade_statement <include refid="select_query_sql"/> 
  </select>
  
  <select id="queryCountByPage" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) items from gs_trade_statement <include refid="select_query_sql"/>
  </select>
  <select id="queryByPage" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from gs_trade_statement <include refid="select_query_sql"/>
    order by create_time desc limit #{startIndex},#{fetchSize}
  </select>
  
  <sql id="select_query_sql">
	  <where>
		  `status` = 1
		  <if test="params != null">
			  <if test="params.merchantId != null">
				  and merchant_id = #{params.merchantId}
			  </if>
			  <if test="params.orderId != null">
				  and order_id = #{params.orderId}
			  </if>
			  <if test="params.startCreateTime != null">
				  and create_time &gt;= #{params.startCreateTime}
			  </if>
			  <if test="params.endCreateTime != null">
				  and create_time &lt;= #{params.endCreateTime}
			  </if>
			  <if test="params.startTime != null">
				  and create_time &gt;= #{params.startTime}
			  </if>
			  <if test="params.endTime != null">
				  and create_time &lt;= #{params.endTime}
			  </if>
		  </if>
		  <if test="params == null">
			  <if test="startTime != null">
				  and create_time &gt;= #{startTime}
			  </if>
			  <if test="endTime != null">
				  and create_time &lt;= #{endTime}
			  </if>
		  </if>
	  </where>
  </sql>

</mapper>